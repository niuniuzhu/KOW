//<auto-generated>
//	Generated by proto generator.  DO NOT EDIT!
//</auto-generated>
//ReSharper disable CheckNamespace
import { Protos } from "../Libs/protos";

export class ProtoCreator {
	private static _init:boolean = false;
	private static readonly _TYPE2ID = new Map<new () => any, Protos.MsgID>();
	private static readonly _ID2TYPE = new Map<Protos.MsgID, new () => any>();

	public static Init():void {
		if (this._init) {
			return;
		}
		this._init = true;
		ProtoCreator._TYPE2ID.set( Protos.G_AskPing, <Protos.MsgID>10 );
		ProtoCreator._TYPE2ID.set( Protos.G_AskPingRet, <Protos.MsgID>11 );
		ProtoCreator._TYPE2ID.set( Protos.GC2LS_AskRegister, <Protos.MsgID>1000 );
		ProtoCreator._TYPE2ID.set( Protos.GC2LS_AskLogin, <Protos.MsgID>1001 );
		ProtoCreator._TYPE2ID.set( Protos.GC2LS_AskSmartLogin, <Protos.MsgID>1002 );
		ProtoCreator._TYPE2ID.set( Protos.GC2LS_AskWXLogin, <Protos.MsgID>1003 );
		ProtoCreator._TYPE2ID.set( Protos.GC2LC_UpdateProfile, <Protos.MsgID>1004 );
		ProtoCreator._TYPE2ID.set( Protos.GC2GS_AskLogin, <Protos.MsgID>1100 );
		ProtoCreator._TYPE2ID.set( Protos.GC2GS_KeepAlive, <Protos.MsgID>1101 );
		ProtoCreator._TYPE2ID.set( Protos.GC2BS_AskLogin, <Protos.MsgID>1200 );
		ProtoCreator._TYPE2ID.set( Protos.GC2BS_KeepAlive, <Protos.MsgID>1201 );
		ProtoCreator._TYPE2ID.set( Protos.GC2BS_RequestSnapshot, <Protos.MsgID>1202 );
		ProtoCreator._TYPE2ID.set( Protos.GC2BS_FrameAction, <Protos.MsgID>1203 );
		ProtoCreator._TYPE2ID.set( Protos.GC2BS_RequestFrameActions, <Protos.MsgID>1204 );
		ProtoCreator._TYPE2ID.set( Protos.GC2BS_CommitSnapshot, <Protos.MsgID>1205 );
		ProtoCreator._TYPE2ID.set( Protos.GC2BS_EndBattle, <Protos.MsgID>1206 );
		ProtoCreator._TYPE2ID.set( Protos.GC2CS_BeginMatch, <Protos.MsgID>1300 );
		ProtoCreator._TYPE2ID.set( Protos.GC2CS_CancelMatch, <Protos.MsgID>1301 );
		ProtoCreator._TYPE2ID.set( Protos.LS2GC_GSInfo, <Protos.MsgID>2000 );
		ProtoCreator._TYPE2ID.set( Protos.LS2GC_AskRegRet, <Protos.MsgID>2001 );
		ProtoCreator._TYPE2ID.set( Protos.LS2GC_AskLoginRet, <Protos.MsgID>2002 );
		ProtoCreator._TYPE2ID.set( Protos.LS2CS_GCLogin, <Protos.MsgID>2100 );
		ProtoCreator._TYPE2ID.set( Protos.LS2DB_QueryAccount, <Protos.MsgID>2200 );
		ProtoCreator._TYPE2ID.set( Protos.LS2DB_QueryLogin, <Protos.MsgID>2201 );
		ProtoCreator._TYPE2ID.set( Protos.LS2DB_Exec, <Protos.MsgID>2202 );
		ProtoCreator._TYPE2ID.set( Protos.GS2CS_ReportState, <Protos.MsgID>3000 );
		ProtoCreator._TYPE2ID.set( Protos.GS2CS_GCAskLogin, <Protos.MsgID>3001 );
		ProtoCreator._TYPE2ID.set( Protos.GS2CS_GCLost, <Protos.MsgID>3002 );
		ProtoCreator._TYPE2ID.set( Protos.GS2GC_LoginRet, <Protos.MsgID>3100 );
		ProtoCreator._TYPE2ID.set( Protos.GS2GC_Kick, <Protos.MsgID>3101 );
		ProtoCreator._TYPE2ID.set( Protos.GS2GC_CSLost, <Protos.MsgID>3102 );
		ProtoCreator._TYPE2ID.set( Protos.BS2CS_ReportState, <Protos.MsgID>4000 );
		ProtoCreator._TYPE2ID.set( Protos.BS2CS_BattleInfoRet, <Protos.MsgID>4001 );
		ProtoCreator._TYPE2ID.set( Protos.BS2CS_BattleEnd, <Protos.MsgID>4002 );
		ProtoCreator._TYPE2ID.set( Protos.BS2CS_KickUser, <Protos.MsgID>4003 );
		ProtoCreator._TYPE2ID.set( Protos.BS2GC_LoginRet, <Protos.MsgID>4100 );
		ProtoCreator._TYPE2ID.set( Protos.BS2GC_RequestSnapshotRet, <Protos.MsgID>4101 );
		ProtoCreator._TYPE2ID.set( Protos.BS2GC_FrameAction, <Protos.MsgID>4102 );
		ProtoCreator._TYPE2ID.set( Protos.BS2GC_RequestFrameActionsRet, <Protos.MsgID>4103 );
		ProtoCreator._TYPE2ID.set( Protos.BS2GC_OutOfSync, <Protos.MsgID>4104 );
		ProtoCreator._TYPE2ID.set( Protos.CS2LS_GSInfos, <Protos.MsgID>5000 );
		ProtoCreator._TYPE2ID.set( Protos.CS2LS_GSInfo, <Protos.MsgID>5001 );
		ProtoCreator._TYPE2ID.set( Protos.CS2LS_GSLost, <Protos.MsgID>5002 );
		ProtoCreator._TYPE2ID.set( Protos.CS2LS_GCLoginRet, <Protos.MsgID>5003 );
		ProtoCreator._TYPE2ID.set( Protos.CS2GS_GCLoginRet, <Protos.MsgID>5100 );
		ProtoCreator._TYPE2ID.set( Protos.CS2GS_KickGC, <Protos.MsgID>5101 );
		ProtoCreator._TYPE2ID.set( Protos.CS2BS_BattleInfo, <Protos.MsgID>5200 );
		ProtoCreator._TYPE2ID.set( Protos.CS2BS_BattleEndRet, <Protos.MsgID>5201 );
		ProtoCreator._TYPE2ID.set( Protos.CS2GC_BeginMatchRet, <Protos.MsgID>5300 );
		ProtoCreator._TYPE2ID.set( Protos.CS2GC_MatchState, <Protos.MsgID>5303 );
		ProtoCreator._TYPE2ID.set( Protos.CS2GC_AddToMatch, <Protos.MsgID>5304 );
		ProtoCreator._TYPE2ID.set( Protos.CS2GC_RemoveFromMatch, <Protos.MsgID>5305 );
		ProtoCreator._TYPE2ID.set( Protos.CS2GC_EnterBattle, <Protos.MsgID>5306 );
		ProtoCreator._TYPE2ID.set( Protos.CS2GC_BattleEnd, <Protos.MsgID>5307 );
		ProtoCreator._TYPE2ID.set( Protos.CS2GC_BSLose, <Protos.MsgID>5308 );
		ProtoCreator._TYPE2ID.set( Protos.CS2DB_UpdateRank, <Protos.MsgID>5400 );
		ProtoCreator._TYPE2ID.set( Protos.DB2LS_QueryAccountRet, <Protos.MsgID>8000 );
		ProtoCreator._TYPE2ID.set( Protos.DB2LS_QueryLoginRet, <Protos.MsgID>8001 );
		ProtoCreator._TYPE2ID.set( Protos.DB2LS_ExecRet, <Protos.MsgID>8002 );

		ProtoCreator._ID2TYPE.set( <Protos.MsgID>10, Protos.G_AskPing );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>11, Protos.G_AskPingRet );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>1000, Protos.GC2LS_AskRegister );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>1001, Protos.GC2LS_AskLogin );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>1002, Protos.GC2LS_AskSmartLogin );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>1003, Protos.GC2LS_AskWXLogin );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>1004, Protos.GC2LC_UpdateProfile );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>1100, Protos.GC2GS_AskLogin );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>1101, Protos.GC2GS_KeepAlive );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>1200, Protos.GC2BS_AskLogin );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>1201, Protos.GC2BS_KeepAlive );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>1202, Protos.GC2BS_RequestSnapshot );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>1203, Protos.GC2BS_FrameAction );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>1204, Protos.GC2BS_RequestFrameActions );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>1205, Protos.GC2BS_CommitSnapshot );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>1206, Protos.GC2BS_EndBattle );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>1300, Protos.GC2CS_BeginMatch );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>1301, Protos.GC2CS_CancelMatch );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>2000, Protos.LS2GC_GSInfo );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>2001, Protos.LS2GC_AskRegRet );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>2002, Protos.LS2GC_AskLoginRet );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>2100, Protos.LS2CS_GCLogin );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>2200, Protos.LS2DB_QueryAccount );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>2201, Protos.LS2DB_QueryLogin );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>2202, Protos.LS2DB_Exec );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>3000, Protos.GS2CS_ReportState );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>3001, Protos.GS2CS_GCAskLogin );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>3002, Protos.GS2CS_GCLost );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>3100, Protos.GS2GC_LoginRet );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>3101, Protos.GS2GC_Kick );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>3102, Protos.GS2GC_CSLost );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>4000, Protos.BS2CS_ReportState );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>4001, Protos.BS2CS_BattleInfoRet );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>4002, Protos.BS2CS_BattleEnd );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>4003, Protos.BS2CS_KickUser );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>4100, Protos.BS2GC_LoginRet );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>4101, Protos.BS2GC_RequestSnapshotRet );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>4102, Protos.BS2GC_FrameAction );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>4103, Protos.BS2GC_RequestFrameActionsRet );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>4104, Protos.BS2GC_OutOfSync );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>5000, Protos.CS2LS_GSInfos );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>5001, Protos.CS2LS_GSInfo );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>5002, Protos.CS2LS_GSLost );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>5003, Protos.CS2LS_GCLoginRet );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>5100, Protos.CS2GS_GCLoginRet );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>5101, Protos.CS2GS_KickGC );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>5200, Protos.CS2BS_BattleInfo );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>5201, Protos.CS2BS_BattleEndRet );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>5300, Protos.CS2GC_BeginMatchRet );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>5303, Protos.CS2GC_MatchState );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>5304, Protos.CS2GC_AddToMatch );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>5305, Protos.CS2GC_RemoveFromMatch );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>5306, Protos.CS2GC_EnterBattle );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>5307, Protos.CS2GC_BattleEnd );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>5308, Protos.CS2GC_BSLose );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>5400, Protos.CS2DB_UpdateRank );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>8000, Protos.DB2LS_QueryAccountRet );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>8001, Protos.DB2LS_QueryLoginRet );
		ProtoCreator._ID2TYPE.set( <Protos.MsgID>8002, Protos.DB2LS_ExecRet );
	}
	public static MakeTransMessage( msg:any, transTarget:number, transID:number ):void {
		msg.opts.flag |= 1 << 3;//mark as transpose
		msg.opts.flag |= 1 << (3+transTarget);//mark the target
		msg.opts.transid = transID;
	}
	public static Q_G_AskPing(): Protos.G_AskPing {
		let msg = new Protos.G_AskPing();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= 1 << Protos.MsgOpts.Flag.RPC;
		return msg;
	}

	public static Q_G_AskPingRet(): Protos.G_AskPingRet {
		let msg = new Protos.G_AskPingRet();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_GC2LS_AskRegister(): Protos.GC2LS_AskRegister {
		let msg = new Protos.GC2LS_AskRegister();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= 1 << Protos.MsgOpts.Flag.RPC;
		return msg;
	}

	public static Q_GC2LS_AskLogin(): Protos.GC2LS_AskLogin {
		let msg = new Protos.GC2LS_AskLogin();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= 1 << Protos.MsgOpts.Flag.RPC;
		return msg;
	}

	public static Q_GC2LS_AskSmartLogin(): Protos.GC2LS_AskSmartLogin {
		let msg = new Protos.GC2LS_AskSmartLogin();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= 1 << Protos.MsgOpts.Flag.RPC;
		return msg;
	}

	public static Q_GC2LS_AskWXLogin(): Protos.GC2LS_AskWXLogin {
		let msg = new Protos.GC2LS_AskWXLogin();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= 1 << Protos.MsgOpts.Flag.RPC;
		return msg;
	}

	public static Q_GC2LC_UpdateProfile(): Protos.GC2LC_UpdateProfile {
		let msg = new Protos.GC2LC_UpdateProfile();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_GC2GS_AskLogin(): Protos.GC2GS_AskLogin {
		let msg = new Protos.GC2GS_AskLogin();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= 1 << Protos.MsgOpts.Flag.RPC;
		return msg;
	}

	public static Q_GC2GS_KeepAlive(): Protos.GC2GS_KeepAlive {
		let msg = new Protos.GC2GS_KeepAlive();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_GC2BS_AskLogin(): Protos.GC2BS_AskLogin {
		let msg = new Protos.GC2BS_AskLogin();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= 1 << Protos.MsgOpts.Flag.RPC;
		return msg;
	}

	public static Q_GC2BS_KeepAlive(): Protos.GC2BS_KeepAlive {
		let msg = new Protos.GC2BS_KeepAlive();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_GC2BS_RequestSnapshot(): Protos.GC2BS_RequestSnapshot {
		let msg = new Protos.GC2BS_RequestSnapshot();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= 1 << Protos.MsgOpts.Flag.RPC;
		return msg;
	}

	public static Q_GC2BS_FrameAction(): Protos.GC2BS_FrameAction {
		let msg = new Protos.GC2BS_FrameAction();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_GC2BS_RequestFrameActions(): Protos.GC2BS_RequestFrameActions {
		let msg = new Protos.GC2BS_RequestFrameActions();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= 1 << Protos.MsgOpts.Flag.RPC;
		return msg;
	}

	public static Q_GC2BS_CommitSnapshot(): Protos.GC2BS_CommitSnapshot {
		let msg = new Protos.GC2BS_CommitSnapshot();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_GC2BS_EndBattle(): Protos.GC2BS_EndBattle {
		let msg = new Protos.GC2BS_EndBattle();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_GC2CS_BeginMatch(): Protos.GC2CS_BeginMatch {
		let msg = new Protos.GC2CS_BeginMatch();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= 1 << Protos.MsgOpts.Flag.RPC;
		return msg;
	}

	public static Q_GC2CS_CancelMatch(): Protos.GC2CS_CancelMatch {
		let msg = new Protos.GC2CS_CancelMatch();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_LS2GC_GSInfo(): Protos.LS2GC_GSInfo {
		let msg = new Protos.LS2GC_GSInfo();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_LS2GC_AskRegRet(): Protos.LS2GC_AskRegRet {
		let msg = new Protos.LS2GC_AskRegRet();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_LS2GC_AskLoginRet(): Protos.LS2GC_AskLoginRet {
		let msg = new Protos.LS2GC_AskLoginRet();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_LS2CS_GCLogin(): Protos.LS2CS_GCLogin {
		let msg = new Protos.LS2CS_GCLogin();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= 1 << Protos.MsgOpts.Flag.RPC;
		return msg;
	}

	public static Q_LS2DB_QueryAccount(): Protos.LS2DB_QueryAccount {
		let msg = new Protos.LS2DB_QueryAccount();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= 1 << Protos.MsgOpts.Flag.RPC;
		return msg;
	}

	public static Q_LS2DB_QueryLogin(): Protos.LS2DB_QueryLogin {
		let msg = new Protos.LS2DB_QueryLogin();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= 1 << Protos.MsgOpts.Flag.RPC;
		return msg;
	}

	public static Q_LS2DB_Exec(): Protos.LS2DB_Exec {
		let msg = new Protos.LS2DB_Exec();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= 1 << Protos.MsgOpts.Flag.RPC;
		return msg;
	}

	public static Q_GS2CS_ReportState(): Protos.GS2CS_ReportState {
		let msg = new Protos.GS2CS_ReportState();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_GS2CS_GCAskLogin(): Protos.GS2CS_GCAskLogin {
		let msg = new Protos.GS2CS_GCAskLogin();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= 1 << Protos.MsgOpts.Flag.RPC;
		return msg;
	}

	public static Q_GS2CS_GCLost(): Protos.GS2CS_GCLost {
		let msg = new Protos.GS2CS_GCLost();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_GS2GC_LoginRet(): Protos.GS2GC_LoginRet {
		let msg = new Protos.GS2GC_LoginRet();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_GS2GC_Kick(): Protos.GS2GC_Kick {
		let msg = new Protos.GS2GC_Kick();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_GS2GC_CSLost(): Protos.GS2GC_CSLost {
		let msg = new Protos.GS2GC_CSLost();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_BS2CS_ReportState(): Protos.BS2CS_ReportState {
		let msg = new Protos.BS2CS_ReportState();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_BS2CS_BattleInfoRet(): Protos.BS2CS_BattleInfoRet {
		let msg = new Protos.BS2CS_BattleInfoRet();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_BS2CS_BattleEnd(): Protos.BS2CS_BattleEnd {
		let msg = new Protos.BS2CS_BattleEnd();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= 1 << Protos.MsgOpts.Flag.RPC;
		return msg;
	}

	public static Q_BS2CS_KickUser(): Protos.BS2CS_KickUser {
		let msg = new Protos.BS2CS_KickUser();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_BS2GC_LoginRet(): Protos.BS2GC_LoginRet {
		let msg = new Protos.BS2GC_LoginRet();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_BS2GC_RequestSnapshotRet(): Protos.BS2GC_RequestSnapshotRet {
		let msg = new Protos.BS2GC_RequestSnapshotRet();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_BS2GC_FrameAction(): Protos.BS2GC_FrameAction {
		let msg = new Protos.BS2GC_FrameAction();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_BS2GC_RequestFrameActionsRet(): Protos.BS2GC_RequestFrameActionsRet {
		let msg = new Protos.BS2GC_RequestFrameActionsRet();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_BS2GC_OutOfSync(): Protos.BS2GC_OutOfSync {
		let msg = new Protos.BS2GC_OutOfSync();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_CS2LS_GSInfos(): Protos.CS2LS_GSInfos {
		let msg = new Protos.CS2LS_GSInfos();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_CS2LS_GSInfo(): Protos.CS2LS_GSInfo {
		let msg = new Protos.CS2LS_GSInfo();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_CS2LS_GSLost(): Protos.CS2LS_GSLost {
		let msg = new Protos.CS2LS_GSLost();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_CS2LS_GCLoginRet(): Protos.CS2LS_GCLoginRet {
		let msg = new Protos.CS2LS_GCLoginRet();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_CS2GS_GCLoginRet(): Protos.CS2GS_GCLoginRet {
		let msg = new Protos.CS2GS_GCLoginRet();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_CS2GS_KickGC(): Protos.CS2GS_KickGC {
		let msg = new Protos.CS2GS_KickGC();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_CS2BS_BattleInfo(): Protos.CS2BS_BattleInfo {
		let msg = new Protos.CS2BS_BattleInfo();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= 1 << Protos.MsgOpts.Flag.RPC;
		return msg;
	}

	public static Q_CS2BS_BattleEndRet(): Protos.CS2BS_BattleEndRet {
		let msg = new Protos.CS2BS_BattleEndRet();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_CS2GC_BeginMatchRet(): Protos.CS2GC_BeginMatchRet {
		let msg = new Protos.CS2GC_BeginMatchRet();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_CS2GC_MatchState(): Protos.CS2GC_MatchState {
		let msg = new Protos.CS2GC_MatchState();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_CS2GC_AddToMatch(): Protos.CS2GC_AddToMatch {
		let msg = new Protos.CS2GC_AddToMatch();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_CS2GC_RemoveFromMatch(): Protos.CS2GC_RemoveFromMatch {
		let msg = new Protos.CS2GC_RemoveFromMatch();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_CS2GC_EnterBattle(): Protos.CS2GC_EnterBattle {
		let msg = new Protos.CS2GC_EnterBattle();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_CS2GC_BattleEnd(): Protos.CS2GC_BattleEnd {
		let msg = new Protos.CS2GC_BattleEnd();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_CS2GC_BSLose(): Protos.CS2GC_BSLose {
		let msg = new Protos.CS2GC_BSLose();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_CS2DB_UpdateRank(): Protos.CS2DB_UpdateRank {
		let msg = new Protos.CS2DB_UpdateRank();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_DB2LS_QueryAccountRet(): Protos.DB2LS_QueryAccountRet {
		let msg = new Protos.DB2LS_QueryAccountRet();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_DB2LS_QueryLoginRet(): Protos.DB2LS_QueryLoginRet {
		let msg = new Protos.DB2LS_QueryLoginRet();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_DB2LS_ExecRet(): Protos.DB2LS_ExecRet {
		let msg = new Protos.DB2LS_ExecRet();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}


	public static R_GC2LS_AskLogin(pid: number): Protos.LS2GC_AskLoginRet {
		let msg = new Protos.LS2GC_AskLoginRet();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= 1 << Protos.MsgOpts.Flag.RESP;
		msg.opts.rpid = pid;
		return msg;
	}

	public static R_GS2CS_GCAskLogin(pid: number): Protos.CS2GS_GCLoginRet {
		let msg = new Protos.CS2GS_GCLoginRet();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= 1 << Protos.MsgOpts.Flag.RESP;
		msg.opts.rpid = pid;
		return msg;
	}

	public static R_LS2CS_GCLogin(pid: number): Protos.CS2LS_GCLoginRet {
		let msg = new Protos.CS2LS_GCLoginRet();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= 1 << Protos.MsgOpts.Flag.RESP;
		msg.opts.rpid = pid;
		return msg;
	}

	public static R_LS2DB_QueryAccount(pid: number): Protos.DB2LS_QueryAccountRet {
		let msg = new Protos.DB2LS_QueryAccountRet();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= 1 << Protos.MsgOpts.Flag.RESP;
		msg.opts.rpid = pid;
		return msg;
	}

	public static R_GC2LS_AskWXLogin(pid: number): Protos.LS2GC_AskLoginRet {
		let msg = new Protos.LS2GC_AskLoginRet();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= 1 << Protos.MsgOpts.Flag.RESP;
		msg.opts.rpid = pid;
		return msg;
	}

	public static R_GC2BS_RequestFrameActions(pid: number): Protos.BS2GC_RequestFrameActionsRet {
		let msg = new Protos.BS2GC_RequestFrameActionsRet();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= 1 << Protos.MsgOpts.Flag.RESP;
		msg.opts.rpid = pid;
		return msg;
	}

	public static R_GC2GS_AskLogin(pid: number): Protos.GS2GC_LoginRet {
		let msg = new Protos.GS2GC_LoginRet();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= 1 << Protos.MsgOpts.Flag.RESP;
		msg.opts.rpid = pid;
		return msg;
	}

	public static R_CS2BS_BattleInfo(pid: number): Protos.BS2CS_BattleInfoRet {
		let msg = new Protos.BS2CS_BattleInfoRet();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= 1 << Protos.MsgOpts.Flag.RESP;
		msg.opts.rpid = pid;
		return msg;
	}

	public static R_GC2BS_RequestSnapshot(pid: number): Protos.BS2GC_RequestSnapshotRet {
		let msg = new Protos.BS2GC_RequestSnapshotRet();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= 1 << Protos.MsgOpts.Flag.RESP;
		msg.opts.rpid = pid;
		return msg;
	}

	public static R_GC2BS_AskLogin(pid: number): Protos.BS2GC_LoginRet {
		let msg = new Protos.BS2GC_LoginRet();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= 1 << Protos.MsgOpts.Flag.RESP;
		msg.opts.rpid = pid;
		return msg;
	}

	public static R_GC2LS_AskSmartLogin(pid: number): Protos.LS2GC_AskLoginRet {
		let msg = new Protos.LS2GC_AskLoginRet();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= 1 << Protos.MsgOpts.Flag.RESP;
		msg.opts.rpid = pid;
		return msg;
	}

	public static R_GC2LS_AskRegister(pid: number): Protos.LS2GC_AskRegRet {
		let msg = new Protos.LS2GC_AskRegRet();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= 1 << Protos.MsgOpts.Flag.RESP;
		msg.opts.rpid = pid;
		return msg;
	}

	public static R_GC2CS_BeginMatch(pid: number): Protos.CS2GC_BeginMatchRet {
		let msg = new Protos.CS2GC_BeginMatchRet();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= 1 << Protos.MsgOpts.Flag.RESP;
		msg.opts.rpid = pid;
		return msg;
	}

	public static R_G_AskPing(pid: number): Protos.G_AskPingRet {
		let msg = new Protos.G_AskPingRet();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= 1 << Protos.MsgOpts.Flag.RESP;
		msg.opts.rpid = pid;
		return msg;
	}

	public static R_BS2CS_BattleEnd(pid: number): Protos.CS2BS_BattleEndRet {
		let msg = new Protos.CS2BS_BattleEndRet();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= 1 << Protos.MsgOpts.Flag.RESP;
		msg.opts.rpid = pid;
		return msg;
	}

	public static R_LS2DB_Exec(pid: number): Protos.DB2LS_ExecRet {
		let msg = new Protos.DB2LS_ExecRet();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= 1 << Protos.MsgOpts.Flag.RESP;
		msg.opts.rpid = pid;
		return msg;
	}

	public static R_LS2DB_QueryLogin(pid: number): Protos.DB2LS_QueryLoginRet {
		let msg = new Protos.DB2LS_QueryLoginRet();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= 1 << Protos.MsgOpts.Flag.RESP;
		msg.opts.rpid = pid;
		return msg;
	}


	public static DecodeMsg(msgID: Protos.MsgID, data: Uint8Array, size: number): any {
		switch ( msgID ) {
			case 10: {
				let msg = Protos.G_AskPing.decode(data, size);
				return msg;
			}
			case 11: {
				let msg = Protos.G_AskPingRet.decode(data, size);
				return msg;
			}
			case 1000: {
				let msg = Protos.GC2LS_AskRegister.decode(data, size);
				return msg;
			}
			case 1001: {
				let msg = Protos.GC2LS_AskLogin.decode(data, size);
				return msg;
			}
			case 1002: {
				let msg = Protos.GC2LS_AskSmartLogin.decode(data, size);
				return msg;
			}
			case 1003: {
				let msg = Protos.GC2LS_AskWXLogin.decode(data, size);
				return msg;
			}
			case 1004: {
				let msg = Protos.GC2LC_UpdateProfile.decode(data, size);
				return msg;
			}
			case 1100: {
				let msg = Protos.GC2GS_AskLogin.decode(data, size);
				return msg;
			}
			case 1101: {
				let msg = Protos.GC2GS_KeepAlive.decode(data, size);
				return msg;
			}
			case 1200: {
				let msg = Protos.GC2BS_AskLogin.decode(data, size);
				return msg;
			}
			case 1201: {
				let msg = Protos.GC2BS_KeepAlive.decode(data, size);
				return msg;
			}
			case 1202: {
				let msg = Protos.GC2BS_RequestSnapshot.decode(data, size);
				return msg;
			}
			case 1203: {
				let msg = Protos.GC2BS_FrameAction.decode(data, size);
				return msg;
			}
			case 1204: {
				let msg = Protos.GC2BS_RequestFrameActions.decode(data, size);
				return msg;
			}
			case 1205: {
				let msg = Protos.GC2BS_CommitSnapshot.decode(data, size);
				return msg;
			}
			case 1206: {
				let msg = Protos.GC2BS_EndBattle.decode(data, size);
				return msg;
			}
			case 1300: {
				let msg = Protos.GC2CS_BeginMatch.decode(data, size);
				return msg;
			}
			case 1301: {
				let msg = Protos.GC2CS_CancelMatch.decode(data, size);
				return msg;
			}
			case 2000: {
				let msg = Protos.LS2GC_GSInfo.decode(data, size);
				return msg;
			}
			case 2001: {
				let msg = Protos.LS2GC_AskRegRet.decode(data, size);
				return msg;
			}
			case 2002: {
				let msg = Protos.LS2GC_AskLoginRet.decode(data, size);
				return msg;
			}
			case 2100: {
				let msg = Protos.LS2CS_GCLogin.decode(data, size);
				return msg;
			}
			case 2200: {
				let msg = Protos.LS2DB_QueryAccount.decode(data, size);
				return msg;
			}
			case 2201: {
				let msg = Protos.LS2DB_QueryLogin.decode(data, size);
				return msg;
			}
			case 2202: {
				let msg = Protos.LS2DB_Exec.decode(data, size);
				return msg;
			}
			case 3000: {
				let msg = Protos.GS2CS_ReportState.decode(data, size);
				return msg;
			}
			case 3001: {
				let msg = Protos.GS2CS_GCAskLogin.decode(data, size);
				return msg;
			}
			case 3002: {
				let msg = Protos.GS2CS_GCLost.decode(data, size);
				return msg;
			}
			case 3100: {
				let msg = Protos.GS2GC_LoginRet.decode(data, size);
				return msg;
			}
			case 3101: {
				let msg = Protos.GS2GC_Kick.decode(data, size);
				return msg;
			}
			case 3102: {
				let msg = Protos.GS2GC_CSLost.decode(data, size);
				return msg;
			}
			case 4000: {
				let msg = Protos.BS2CS_ReportState.decode(data, size);
				return msg;
			}
			case 4001: {
				let msg = Protos.BS2CS_BattleInfoRet.decode(data, size);
				return msg;
			}
			case 4002: {
				let msg = Protos.BS2CS_BattleEnd.decode(data, size);
				return msg;
			}
			case 4003: {
				let msg = Protos.BS2CS_KickUser.decode(data, size);
				return msg;
			}
			case 4100: {
				let msg = Protos.BS2GC_LoginRet.decode(data, size);
				return msg;
			}
			case 4101: {
				let msg = Protos.BS2GC_RequestSnapshotRet.decode(data, size);
				return msg;
			}
			case 4102: {
				let msg = Protos.BS2GC_FrameAction.decode(data, size);
				return msg;
			}
			case 4103: {
				let msg = Protos.BS2GC_RequestFrameActionsRet.decode(data, size);
				return msg;
			}
			case 4104: {
				let msg = Protos.BS2GC_OutOfSync.decode(data, size);
				return msg;
			}
			case 5000: {
				let msg = Protos.CS2LS_GSInfos.decode(data, size);
				return msg;
			}
			case 5001: {
				let msg = Protos.CS2LS_GSInfo.decode(data, size);
				return msg;
			}
			case 5002: {
				let msg = Protos.CS2LS_GSLost.decode(data, size);
				return msg;
			}
			case 5003: {
				let msg = Protos.CS2LS_GCLoginRet.decode(data, size);
				return msg;
			}
			case 5100: {
				let msg = Protos.CS2GS_GCLoginRet.decode(data, size);
				return msg;
			}
			case 5101: {
				let msg = Protos.CS2GS_KickGC.decode(data, size);
				return msg;
			}
			case 5200: {
				let msg = Protos.CS2BS_BattleInfo.decode(data, size);
				return msg;
			}
			case 5201: {
				let msg = Protos.CS2BS_BattleEndRet.decode(data, size);
				return msg;
			}
			case 5300: {
				let msg = Protos.CS2GC_BeginMatchRet.decode(data, size);
				return msg;
			}
			case 5303: {
				let msg = Protos.CS2GC_MatchState.decode(data, size);
				return msg;
			}
			case 5304: {
				let msg = Protos.CS2GC_AddToMatch.decode(data, size);
				return msg;
			}
			case 5305: {
				let msg = Protos.CS2GC_RemoveFromMatch.decode(data, size);
				return msg;
			}
			case 5306: {
				let msg = Protos.CS2GC_EnterBattle.decode(data, size);
				return msg;
			}
			case 5307: {
				let msg = Protos.CS2GC_BattleEnd.decode(data, size);
				return msg;
			}
			case 5308: {
				let msg = Protos.CS2GC_BSLose.decode(data, size);
				return msg;
			}
			case 5400: {
				let msg = Protos.CS2DB_UpdateRank.decode(data, size);
				return msg;
			}
			case 8000: {
				let msg = Protos.DB2LS_QueryAccountRet.decode(data, size);
				return msg;
			}
			case 8001: {
				let msg = Protos.DB2LS_QueryLoginRet.decode(data, size);
				return msg;
			}
			case 8002: {
				let msg = Protos.DB2LS_ExecRet.decode(data, size);
				return msg;
			}
		}
		return null;
	}

	public static D_G_AskPing(data: Uint8Array, size: number): Protos.G_AskPing {
		let msg = Protos.G_AskPing.decode(data, size);
		return msg;
	}

	public static D_G_AskPingRet(data: Uint8Array, size: number): Protos.G_AskPingRet {
		let msg = Protos.G_AskPingRet.decode(data, size);
		return msg;
	}

	public static D_GC2LS_AskRegister(data: Uint8Array, size: number): Protos.GC2LS_AskRegister {
		let msg = Protos.GC2LS_AskRegister.decode(data, size);
		return msg;
	}

	public static D_GC2LS_AskLogin(data: Uint8Array, size: number): Protos.GC2LS_AskLogin {
		let msg = Protos.GC2LS_AskLogin.decode(data, size);
		return msg;
	}

	public static D_GC2LS_AskSmartLogin(data: Uint8Array, size: number): Protos.GC2LS_AskSmartLogin {
		let msg = Protos.GC2LS_AskSmartLogin.decode(data, size);
		return msg;
	}

	public static D_GC2LS_AskWXLogin(data: Uint8Array, size: number): Protos.GC2LS_AskWXLogin {
		let msg = Protos.GC2LS_AskWXLogin.decode(data, size);
		return msg;
	}

	public static D_GC2LC_UpdateProfile(data: Uint8Array, size: number): Protos.GC2LC_UpdateProfile {
		let msg = Protos.GC2LC_UpdateProfile.decode(data, size);
		return msg;
	}

	public static D_GC2GS_AskLogin(data: Uint8Array, size: number): Protos.GC2GS_AskLogin {
		let msg = Protos.GC2GS_AskLogin.decode(data, size);
		return msg;
	}

	public static D_GC2GS_KeepAlive(data: Uint8Array, size: number): Protos.GC2GS_KeepAlive {
		let msg = Protos.GC2GS_KeepAlive.decode(data, size);
		return msg;
	}

	public static D_GC2BS_AskLogin(data: Uint8Array, size: number): Protos.GC2BS_AskLogin {
		let msg = Protos.GC2BS_AskLogin.decode(data, size);
		return msg;
	}

	public static D_GC2BS_KeepAlive(data: Uint8Array, size: number): Protos.GC2BS_KeepAlive {
		let msg = Protos.GC2BS_KeepAlive.decode(data, size);
		return msg;
	}

	public static D_GC2BS_RequestSnapshot(data: Uint8Array, size: number): Protos.GC2BS_RequestSnapshot {
		let msg = Protos.GC2BS_RequestSnapshot.decode(data, size);
		return msg;
	}

	public static D_GC2BS_FrameAction(data: Uint8Array, size: number): Protos.GC2BS_FrameAction {
		let msg = Protos.GC2BS_FrameAction.decode(data, size);
		return msg;
	}

	public static D_GC2BS_RequestFrameActions(data: Uint8Array, size: number): Protos.GC2BS_RequestFrameActions {
		let msg = Protos.GC2BS_RequestFrameActions.decode(data, size);
		return msg;
	}

	public static D_GC2BS_CommitSnapshot(data: Uint8Array, size: number): Protos.GC2BS_CommitSnapshot {
		let msg = Protos.GC2BS_CommitSnapshot.decode(data, size);
		return msg;
	}

	public static D_GC2BS_EndBattle(data: Uint8Array, size: number): Protos.GC2BS_EndBattle {
		let msg = Protos.GC2BS_EndBattle.decode(data, size);
		return msg;
	}

	public static D_GC2CS_BeginMatch(data: Uint8Array, size: number): Protos.GC2CS_BeginMatch {
		let msg = Protos.GC2CS_BeginMatch.decode(data, size);
		return msg;
	}

	public static D_GC2CS_CancelMatch(data: Uint8Array, size: number): Protos.GC2CS_CancelMatch {
		let msg = Protos.GC2CS_CancelMatch.decode(data, size);
		return msg;
	}

	public static D_LS2GC_GSInfo(data: Uint8Array, size: number): Protos.LS2GC_GSInfo {
		let msg = Protos.LS2GC_GSInfo.decode(data, size);
		return msg;
	}

	public static D_LS2GC_AskRegRet(data: Uint8Array, size: number): Protos.LS2GC_AskRegRet {
		let msg = Protos.LS2GC_AskRegRet.decode(data, size);
		return msg;
	}

	public static D_LS2GC_AskLoginRet(data: Uint8Array, size: number): Protos.LS2GC_AskLoginRet {
		let msg = Protos.LS2GC_AskLoginRet.decode(data, size);
		return msg;
	}

	public static D_LS2CS_GCLogin(data: Uint8Array, size: number): Protos.LS2CS_GCLogin {
		let msg = Protos.LS2CS_GCLogin.decode(data, size);
		return msg;
	}

	public static D_LS2DB_QueryAccount(data: Uint8Array, size: number): Protos.LS2DB_QueryAccount {
		let msg = Protos.LS2DB_QueryAccount.decode(data, size);
		return msg;
	}

	public static D_LS2DB_QueryLogin(data: Uint8Array, size: number): Protos.LS2DB_QueryLogin {
		let msg = Protos.LS2DB_QueryLogin.decode(data, size);
		return msg;
	}

	public static D_LS2DB_Exec(data: Uint8Array, size: number): Protos.LS2DB_Exec {
		let msg = Protos.LS2DB_Exec.decode(data, size);
		return msg;
	}

	public static D_GS2CS_ReportState(data: Uint8Array, size: number): Protos.GS2CS_ReportState {
		let msg = Protos.GS2CS_ReportState.decode(data, size);
		return msg;
	}

	public static D_GS2CS_GCAskLogin(data: Uint8Array, size: number): Protos.GS2CS_GCAskLogin {
		let msg = Protos.GS2CS_GCAskLogin.decode(data, size);
		return msg;
	}

	public static D_GS2CS_GCLost(data: Uint8Array, size: number): Protos.GS2CS_GCLost {
		let msg = Protos.GS2CS_GCLost.decode(data, size);
		return msg;
	}

	public static D_GS2GC_LoginRet(data: Uint8Array, size: number): Protos.GS2GC_LoginRet {
		let msg = Protos.GS2GC_LoginRet.decode(data, size);
		return msg;
	}

	public static D_GS2GC_Kick(data: Uint8Array, size: number): Protos.GS2GC_Kick {
		let msg = Protos.GS2GC_Kick.decode(data, size);
		return msg;
	}

	public static D_GS2GC_CSLost(data: Uint8Array, size: number): Protos.GS2GC_CSLost {
		let msg = Protos.GS2GC_CSLost.decode(data, size);
		return msg;
	}

	public static D_BS2CS_ReportState(data: Uint8Array, size: number): Protos.BS2CS_ReportState {
		let msg = Protos.BS2CS_ReportState.decode(data, size);
		return msg;
	}

	public static D_BS2CS_BattleInfoRet(data: Uint8Array, size: number): Protos.BS2CS_BattleInfoRet {
		let msg = Protos.BS2CS_BattleInfoRet.decode(data, size);
		return msg;
	}

	public static D_BS2CS_BattleEnd(data: Uint8Array, size: number): Protos.BS2CS_BattleEnd {
		let msg = Protos.BS2CS_BattleEnd.decode(data, size);
		return msg;
	}

	public static D_BS2CS_KickUser(data: Uint8Array, size: number): Protos.BS2CS_KickUser {
		let msg = Protos.BS2CS_KickUser.decode(data, size);
		return msg;
	}

	public static D_BS2GC_LoginRet(data: Uint8Array, size: number): Protos.BS2GC_LoginRet {
		let msg = Protos.BS2GC_LoginRet.decode(data, size);
		return msg;
	}

	public static D_BS2GC_RequestSnapshotRet(data: Uint8Array, size: number): Protos.BS2GC_RequestSnapshotRet {
		let msg = Protos.BS2GC_RequestSnapshotRet.decode(data, size);
		return msg;
	}

	public static D_BS2GC_FrameAction(data: Uint8Array, size: number): Protos.BS2GC_FrameAction {
		let msg = Protos.BS2GC_FrameAction.decode(data, size);
		return msg;
	}

	public static D_BS2GC_RequestFrameActionsRet(data: Uint8Array, size: number): Protos.BS2GC_RequestFrameActionsRet {
		let msg = Protos.BS2GC_RequestFrameActionsRet.decode(data, size);
		return msg;
	}

	public static D_BS2GC_OutOfSync(data: Uint8Array, size: number): Protos.BS2GC_OutOfSync {
		let msg = Protos.BS2GC_OutOfSync.decode(data, size);
		return msg;
	}

	public static D_CS2LS_GSInfos(data: Uint8Array, size: number): Protos.CS2LS_GSInfos {
		let msg = Protos.CS2LS_GSInfos.decode(data, size);
		return msg;
	}

	public static D_CS2LS_GSInfo(data: Uint8Array, size: number): Protos.CS2LS_GSInfo {
		let msg = Protos.CS2LS_GSInfo.decode(data, size);
		return msg;
	}

	public static D_CS2LS_GSLost(data: Uint8Array, size: number): Protos.CS2LS_GSLost {
		let msg = Protos.CS2LS_GSLost.decode(data, size);
		return msg;
	}

	public static D_CS2LS_GCLoginRet(data: Uint8Array, size: number): Protos.CS2LS_GCLoginRet {
		let msg = Protos.CS2LS_GCLoginRet.decode(data, size);
		return msg;
	}

	public static D_CS2GS_GCLoginRet(data: Uint8Array, size: number): Protos.CS2GS_GCLoginRet {
		let msg = Protos.CS2GS_GCLoginRet.decode(data, size);
		return msg;
	}

	public static D_CS2GS_KickGC(data: Uint8Array, size: number): Protos.CS2GS_KickGC {
		let msg = Protos.CS2GS_KickGC.decode(data, size);
		return msg;
	}

	public static D_CS2BS_BattleInfo(data: Uint8Array, size: number): Protos.CS2BS_BattleInfo {
		let msg = Protos.CS2BS_BattleInfo.decode(data, size);
		return msg;
	}

	public static D_CS2BS_BattleEndRet(data: Uint8Array, size: number): Protos.CS2BS_BattleEndRet {
		let msg = Protos.CS2BS_BattleEndRet.decode(data, size);
		return msg;
	}

	public static D_CS2GC_BeginMatchRet(data: Uint8Array, size: number): Protos.CS2GC_BeginMatchRet {
		let msg = Protos.CS2GC_BeginMatchRet.decode(data, size);
		return msg;
	}

	public static D_CS2GC_MatchState(data: Uint8Array, size: number): Protos.CS2GC_MatchState {
		let msg = Protos.CS2GC_MatchState.decode(data, size);
		return msg;
	}

	public static D_CS2GC_AddToMatch(data: Uint8Array, size: number): Protos.CS2GC_AddToMatch {
		let msg = Protos.CS2GC_AddToMatch.decode(data, size);
		return msg;
	}

	public static D_CS2GC_RemoveFromMatch(data: Uint8Array, size: number): Protos.CS2GC_RemoveFromMatch {
		let msg = Protos.CS2GC_RemoveFromMatch.decode(data, size);
		return msg;
	}

	public static D_CS2GC_EnterBattle(data: Uint8Array, size: number): Protos.CS2GC_EnterBattle {
		let msg = Protos.CS2GC_EnterBattle.decode(data, size);
		return msg;
	}

	public static D_CS2GC_BattleEnd(data: Uint8Array, size: number): Protos.CS2GC_BattleEnd {
		let msg = Protos.CS2GC_BattleEnd.decode(data, size);
		return msg;
	}

	public static D_CS2GC_BSLose(data: Uint8Array, size: number): Protos.CS2GC_BSLose {
		let msg = Protos.CS2GC_BSLose.decode(data, size);
		return msg;
	}

	public static D_CS2DB_UpdateRank(data: Uint8Array, size: number): Protos.CS2DB_UpdateRank {
		let msg = Protos.CS2DB_UpdateRank.decode(data, size);
		return msg;
	}

	public static D_DB2LS_QueryAccountRet(data: Uint8Array, size: number): Protos.DB2LS_QueryAccountRet {
		let msg = Protos.DB2LS_QueryAccountRet.decode(data, size);
		return msg;
	}

	public static D_DB2LS_QueryLoginRet(data: Uint8Array, size: number): Protos.DB2LS_QueryLoginRet {
		let msg = Protos.DB2LS_QueryLoginRet.decode(data, size);
		return msg;
	}

	public static D_DB2LS_ExecRet(data: Uint8Array, size: number): Protos.DB2LS_ExecRet {
		let msg = Protos.DB2LS_ExecRet.decode(data, size);
		return msg;
	}


	public static CreateMsgByID(msgID:Protos.MsgID): any {
		switch ( msgID ) {
			case 10: {
				return new Protos.G_AskPing();
			}
			case 11: {
				return new Protos.G_AskPingRet();
			}
			case 1000: {
				return new Protos.GC2LS_AskRegister();
			}
			case 1001: {
				return new Protos.GC2LS_AskLogin();
			}
			case 1002: {
				return new Protos.GC2LS_AskSmartLogin();
			}
			case 1003: {
				return new Protos.GC2LS_AskWXLogin();
			}
			case 1004: {
				return new Protos.GC2LC_UpdateProfile();
			}
			case 1100: {
				return new Protos.GC2GS_AskLogin();
			}
			case 1101: {
				return new Protos.GC2GS_KeepAlive();
			}
			case 1200: {
				return new Protos.GC2BS_AskLogin();
			}
			case 1201: {
				return new Protos.GC2BS_KeepAlive();
			}
			case 1202: {
				return new Protos.GC2BS_RequestSnapshot();
			}
			case 1203: {
				return new Protos.GC2BS_FrameAction();
			}
			case 1204: {
				return new Protos.GC2BS_RequestFrameActions();
			}
			case 1205: {
				return new Protos.GC2BS_CommitSnapshot();
			}
			case 1206: {
				return new Protos.GC2BS_EndBattle();
			}
			case 1300: {
				return new Protos.GC2CS_BeginMatch();
			}
			case 1301: {
				return new Protos.GC2CS_CancelMatch();
			}
			case 2000: {
				return new Protos.LS2GC_GSInfo();
			}
			case 2001: {
				return new Protos.LS2GC_AskRegRet();
			}
			case 2002: {
				return new Protos.LS2GC_AskLoginRet();
			}
			case 2100: {
				return new Protos.LS2CS_GCLogin();
			}
			case 2200: {
				return new Protos.LS2DB_QueryAccount();
			}
			case 2201: {
				return new Protos.LS2DB_QueryLogin();
			}
			case 2202: {
				return new Protos.LS2DB_Exec();
			}
			case 3000: {
				return new Protos.GS2CS_ReportState();
			}
			case 3001: {
				return new Protos.GS2CS_GCAskLogin();
			}
			case 3002: {
				return new Protos.GS2CS_GCLost();
			}
			case 3100: {
				return new Protos.GS2GC_LoginRet();
			}
			case 3101: {
				return new Protos.GS2GC_Kick();
			}
			case 3102: {
				return new Protos.GS2GC_CSLost();
			}
			case 4000: {
				return new Protos.BS2CS_ReportState();
			}
			case 4001: {
				return new Protos.BS2CS_BattleInfoRet();
			}
			case 4002: {
				return new Protos.BS2CS_BattleEnd();
			}
			case 4003: {
				return new Protos.BS2CS_KickUser();
			}
			case 4100: {
				return new Protos.BS2GC_LoginRet();
			}
			case 4101: {
				return new Protos.BS2GC_RequestSnapshotRet();
			}
			case 4102: {
				return new Protos.BS2GC_FrameAction();
			}
			case 4103: {
				return new Protos.BS2GC_RequestFrameActionsRet();
			}
			case 4104: {
				return new Protos.BS2GC_OutOfSync();
			}
			case 5000: {
				return new Protos.CS2LS_GSInfos();
			}
			case 5001: {
				return new Protos.CS2LS_GSInfo();
			}
			case 5002: {
				return new Protos.CS2LS_GSLost();
			}
			case 5003: {
				return new Protos.CS2LS_GCLoginRet();
			}
			case 5100: {
				return new Protos.CS2GS_GCLoginRet();
			}
			case 5101: {
				return new Protos.CS2GS_KickGC();
			}
			case 5200: {
				return new Protos.CS2BS_BattleInfo();
			}
			case 5201: {
				return new Protos.CS2BS_BattleEndRet();
			}
			case 5300: {
				return new Protos.CS2GC_BeginMatchRet();
			}
			case 5303: {
				return new Protos.CS2GC_MatchState();
			}
			case 5304: {
				return new Protos.CS2GC_AddToMatch();
			}
			case 5305: {
				return new Protos.CS2GC_RemoveFromMatch();
			}
			case 5306: {
				return new Protos.CS2GC_EnterBattle();
			}
			case 5307: {
				return new Protos.CS2GC_BattleEnd();
			}
			case 5308: {
				return new Protos.CS2GC_BSLose();
			}
			case 5400: {
				return new Protos.CS2DB_UpdateRank();
			}
			case 8000: {
				return new Protos.DB2LS_QueryAccountRet();
			}
			case 8001: {
				return new Protos.DB2LS_QueryLoginRet();
			}
			case 8002: {
				return new Protos.DB2LS_ExecRet();
			}
		}
		return null;
	}

	public static GetMsgOpts(message: any): Protos.IMsgOpts {
		let msgID = ProtoCreator.GetMsgID(message);
		switch ( msgID ) {
			case 10: {
				return (<Protos.G_AskPing>message).opts;
			}
			case 11: {
				return (<Protos.G_AskPingRet>message).opts;
			}
			case 1000: {
				return (<Protos.GC2LS_AskRegister>message).opts;
			}
			case 1001: {
				return (<Protos.GC2LS_AskLogin>message).opts;
			}
			case 1002: {
				return (<Protos.GC2LS_AskSmartLogin>message).opts;
			}
			case 1003: {
				return (<Protos.GC2LS_AskWXLogin>message).opts;
			}
			case 1004: {
				return (<Protos.GC2LC_UpdateProfile>message).opts;
			}
			case 1100: {
				return (<Protos.GC2GS_AskLogin>message).opts;
			}
			case 1101: {
				return (<Protos.GC2GS_KeepAlive>message).opts;
			}
			case 1200: {
				return (<Protos.GC2BS_AskLogin>message).opts;
			}
			case 1201: {
				return (<Protos.GC2BS_KeepAlive>message).opts;
			}
			case 1202: {
				return (<Protos.GC2BS_RequestSnapshot>message).opts;
			}
			case 1203: {
				return (<Protos.GC2BS_FrameAction>message).opts;
			}
			case 1204: {
				return (<Protos.GC2BS_RequestFrameActions>message).opts;
			}
			case 1205: {
				return (<Protos.GC2BS_CommitSnapshot>message).opts;
			}
			case 1206: {
				return (<Protos.GC2BS_EndBattle>message).opts;
			}
			case 1300: {
				return (<Protos.GC2CS_BeginMatch>message).opts;
			}
			case 1301: {
				return (<Protos.GC2CS_CancelMatch>message).opts;
			}
			case 2000: {
				return (<Protos.LS2GC_GSInfo>message).opts;
			}
			case 2001: {
				return (<Protos.LS2GC_AskRegRet>message).opts;
			}
			case 2002: {
				return (<Protos.LS2GC_AskLoginRet>message).opts;
			}
			case 2100: {
				return (<Protos.LS2CS_GCLogin>message).opts;
			}
			case 2200: {
				return (<Protos.LS2DB_QueryAccount>message).opts;
			}
			case 2201: {
				return (<Protos.LS2DB_QueryLogin>message).opts;
			}
			case 2202: {
				return (<Protos.LS2DB_Exec>message).opts;
			}
			case 3000: {
				return (<Protos.GS2CS_ReportState>message).opts;
			}
			case 3001: {
				return (<Protos.GS2CS_GCAskLogin>message).opts;
			}
			case 3002: {
				return (<Protos.GS2CS_GCLost>message).opts;
			}
			case 3100: {
				return (<Protos.GS2GC_LoginRet>message).opts;
			}
			case 3101: {
				return (<Protos.GS2GC_Kick>message).opts;
			}
			case 3102: {
				return (<Protos.GS2GC_CSLost>message).opts;
			}
			case 4000: {
				return (<Protos.BS2CS_ReportState>message).opts;
			}
			case 4001: {
				return (<Protos.BS2CS_BattleInfoRet>message).opts;
			}
			case 4002: {
				return (<Protos.BS2CS_BattleEnd>message).opts;
			}
			case 4003: {
				return (<Protos.BS2CS_KickUser>message).opts;
			}
			case 4100: {
				return (<Protos.BS2GC_LoginRet>message).opts;
			}
			case 4101: {
				return (<Protos.BS2GC_RequestSnapshotRet>message).opts;
			}
			case 4102: {
				return (<Protos.BS2GC_FrameAction>message).opts;
			}
			case 4103: {
				return (<Protos.BS2GC_RequestFrameActionsRet>message).opts;
			}
			case 4104: {
				return (<Protos.BS2GC_OutOfSync>message).opts;
			}
			case 5000: {
				return (<Protos.CS2LS_GSInfos>message).opts;
			}
			case 5001: {
				return (<Protos.CS2LS_GSInfo>message).opts;
			}
			case 5002: {
				return (<Protos.CS2LS_GSLost>message).opts;
			}
			case 5003: {
				return (<Protos.CS2LS_GCLoginRet>message).opts;
			}
			case 5100: {
				return (<Protos.CS2GS_GCLoginRet>message).opts;
			}
			case 5101: {
				return (<Protos.CS2GS_KickGC>message).opts;
			}
			case 5200: {
				return (<Protos.CS2BS_BattleInfo>message).opts;
			}
			case 5201: {
				return (<Protos.CS2BS_BattleEndRet>message).opts;
			}
			case 5300: {
				return (<Protos.CS2GC_BeginMatchRet>message).opts;
			}
			case 5303: {
				return (<Protos.CS2GC_MatchState>message).opts;
			}
			case 5304: {
				return (<Protos.CS2GC_AddToMatch>message).opts;
			}
			case 5305: {
				return (<Protos.CS2GC_RemoveFromMatch>message).opts;
			}
			case 5306: {
				return (<Protos.CS2GC_EnterBattle>message).opts;
			}
			case 5307: {
				return (<Protos.CS2GC_BattleEnd>message).opts;
			}
			case 5308: {
				return (<Protos.CS2GC_BSLose>message).opts;
			}
			case 5400: {
				return (<Protos.CS2DB_UpdateRank>message).opts;
			}
			case 8000: {
				return (<Protos.DB2LS_QueryAccountRet>message).opts;
			}
			case 8001: {
				return (<Protos.DB2LS_QueryLoginRet>message).opts;
			}
			case 8002: {
				return (<Protos.DB2LS_ExecRet>message).opts;
			}
		}
		return null;
	}

	public static GetMsgIDByType(type: new () => any): Protos.MsgID { return ProtoCreator._TYPE2ID.get(type); }

	public static GetMsgID(message: any): Protos.MsgID { return ProtoCreator._TYPE2ID.get(message.constructor); }

} //end class
