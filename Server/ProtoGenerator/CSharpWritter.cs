using System;
using System.Collections.Generic;
using System.IO;
using System.Text;

namespace ProtoGenerator
{
	public class CSharpWritter : IWriter
	{
		public bool WriteDesc( string ns, Dictionary<string, int> clsToMsgID, Dictionary<string, string> responseToMsgID, string outputPath, ref string error )
		{
			StringBuilder sb = new StringBuilder();

			sb.AppendLine( "//<auto-generated>\r\n//\tGenerated by proto generator.  DO NOT EDIT!\r\n//</auto-generated>" );
			sb.AppendLine( "using Google.Protobuf;" );
			sb.AppendLine();

			sb.AppendLine( "public static class ProtoCreator {" );

			sb.AppendLine( "\t#region mappings" );
			//type to id
			sb.AppendLine( $"\tinternal static readonly System.Collections.Generic.Dictionary<System.Type, {ns}.MsgID> _TYPE2ID = new System.Collections.Generic.Dictionary<System.Type, {ns}.MsgID> {{" );
			foreach ( KeyValuePair<string, int> kv in clsToMsgID )
				sb.AppendLine( $"\t\t{{typeof({ns}.{kv.Key}), ({ns}.MsgID){kv.Value}}}," );
			sb.AppendLine( "\t};" );
			sb.AppendLine();

			//id to type
			sb.AppendLine( $"\tinternal static readonly System.Collections.Generic.Dictionary<{ns}.MsgID, System.Type> _ID2TYPE = new System.Collections.Generic.Dictionary<{ns}.MsgID, System.Type> {{" );
			foreach ( KeyValuePair<string, int> kv in clsToMsgID )
				sb.AppendLine( $"\t\t{{({ns}.MsgID){kv.Value}, typeof({ns}.{kv.Key})}}," );
			sb.AppendLine( "\t};" );

			sb.AppendLine( "\t#endregion" );
			sb.AppendLine();

			#region 生成请求消息
			sb.AppendLine( "\t#region proto generator class" );
			foreach ( KeyValuePair<string, int> kv in clsToMsgID )
			{
				sb.AppendLine( $"\tpublic static {ns}.{kv.Key} Q_{kv.Key}() {{" );
				sb.AppendLine( $"\t\tvar msg = new {ns}.{kv.Key}();" );
				sb.AppendLine( $"\t\tmsg.Opts = new {ns}.MsgOpts();" );
				if ( responseToMsgID.ContainsKey( kv.Key ) )
					sb.AppendLine( $"\t\tmsg.Opts.Flag |= 1 << (int){ns}.MsgOpts.Types.Flag.Rpc;" );
				sb.AppendLine( "\t\treturn msg;" );
				sb.AppendLine( "\t}" );
				sb.AppendLine();
			}
			sb.AppendLine( "\t#endregion" );
			#endregion
			sb.AppendLine();

			#region 生成回应消息
			sb.AppendLine( "\t#region response message static functions" );
			foreach ( KeyValuePair<string, string> kv in responseToMsgID )
			{
				sb.AppendLine( $"\tpublic static {ns}.{kv.Value} R_{kv.Key}( uint pid ) {{" );
				sb.AppendLine( $"\t\tvar msg = new {ns}.{kv.Value}();" );
				sb.AppendLine( $"\t\tmsg.Opts = new {ns}.MsgOpts();" );
				sb.AppendLine( $"\t\tmsg.Opts.Flag |= 1 << (int){ns}.MsgOpts.Types.Flag.Resp;" );
				sb.AppendLine( "\t\tmsg.Opts.Rpid = pid;" );
				sb.AppendLine( "\t\treturn msg;" );
				sb.AppendLine( "\t}" );
				sb.AppendLine();
			}
			sb.AppendLine( "\t#endregion" );
			#endregion
			sb.AppendLine();

			#region 生成解码消息
			sb.AppendLine( "\t#region decode message static functions" );
			sb.AppendLine( $"\tpublic static Google.Protobuf.IMessage DecodeMsg( {ns}.MsgID msgID, byte[] data, int offset, int size ) {{" );
			sb.AppendLine( "\t\tswitch ( msgID ) {" );
			foreach ( KeyValuePair<string, int> kv in clsToMsgID )
			{
				sb.AppendLine( $"\t\t\tcase ({ns}.MsgID){kv.Value}: {{" );
				sb.AppendLine( $"\t\t\t\tvar msg = new {ns}.{kv.Key}();" );
				sb.AppendLine( "\t\t\t\tmsg.MergeFrom( data, offset, size );" );
				sb.AppendLine( "\t\t\t\treturn msg;" );
				sb.AppendLine( "\t\t\t}" );
			}
			sb.AppendLine( "\t\t}" );
			sb.AppendLine( "\t\treturn null;" );
			sb.AppendLine( "\t}" );
			sb.AppendLine();

			foreach ( KeyValuePair<string, int> kv in clsToMsgID )
			{
				sb.AppendLine( $"\tpublic static {ns}.{kv.Key} D_{kv.Key}( byte[] data, int offset, int size ) {{" );
				sb.AppendLine( $"\t\tvar msg = new {ns}.{kv.Key}();" );
				sb.AppendLine( "\t\tmsg.MergeFrom( data, offset, size );" );
				sb.AppendLine( "\t\treturn msg;" );
				sb.AppendLine( "\t}" );
				sb.AppendLine();
			}
			sb.AppendLine( "\t#endregion" );
			#endregion
			sb.AppendLine();

			sb.AppendLine( "\t#region create message static functions" );
			//CreateMessageByID
			sb.AppendLine( "\tpublic static Google.Protobuf.IMessage CreateMsgByID( Protos.MsgID msgID ) {" );
			sb.AppendLine( "\t\tswitch ( msgID ) {" );
			foreach ( KeyValuePair<string, int> kv in clsToMsgID )
			{
				sb.AppendLine( $"\t\t\tcase ({ns}.MsgID){kv.Value}: {{" );
				sb.AppendLine( $"\t\t\t\treturn new {ns}.{kv.Key}();" );
				sb.AppendLine( "\t\t\t}" );
			}
			sb.AppendLine( "\t\t}" );
			sb.AppendLine( "\t\treturn null;" );
			sb.AppendLine( "\t}" );
			//end CreateMessageByID
			sb.AppendLine( "\t#endregion" );
			sb.AppendLine();

			sb.AppendLine( "\t#region get message options static functions" );
			//Get options
			sb.AppendLine( $"\tpublic static {ns}.MsgOpts GetMsgOpts( this Google.Protobuf.IMessage message ) {{" );
			sb.AppendLine( "\t\tvar msgID = message.GetMsgID();" );
			sb.AppendLine( "\t\tswitch ( msgID ) {" );
			foreach ( KeyValuePair<string, int> kv in clsToMsgID )
			{
				sb.AppendLine( $"\t\t\tcase ({ns}.MsgID){kv.Value}: {{" );
				sb.AppendLine( $"\t\t\t\treturn (({ns}.{kv.Key})message).Opts;" );
				sb.AppendLine( "\t\t\t}" );
			}
			sb.AppendLine( "\t\t}" );
			sb.AppendLine( "\t\treturn null;" );
			sb.AppendLine( "\t}" );
			//end Get options
			sb.AppendLine( "\t#endregion" );
			sb.AppendLine();

			#region 扩展方法

			#region 构造转发消息
			sb.AppendLine( "\t#region construct transpose message" );
			sb.AppendLine( "\tpublic static void MTrans( this Google.Protobuf.IMessage msg, Protos.MsgOpts.Types.TransTarget transTarget, ulong transID ) {" );
			sb.AppendLine( "\t\tvar opts = msg.GetMsgOpts();" );
			sb.AppendLine( "\t\topts.Flag |= 1 << 3;//mark as transpose" );
			sb.AppendLine( "\t\topts.Flag |= (uint)(1 << (3+( int ) transTarget));//mark the target" );
			sb.AppendLine( "\t\topts.Transid = transID;" );
			sb.AppendLine( "\t}" );
			sb.AppendLine( "\t#endregion" );
			#endregion
			sb.AppendLine();

			sb.AppendLine( "\t#region get message static functions" );
			sb.AppendLine( "\tpublic static Protos.MsgID GetMsgID( System.Type type ) => _TYPE2ID[type];" );
			sb.AppendLine();

			sb.AppendLine( "\tpublic static Protos.MsgID GetMsgID<T>() where T : Google.Protobuf.IMessage => _TYPE2ID[typeof( T )];" );
			sb.AppendLine();

			sb.AppendLine( "\tpublic static Protos.MsgID GetMsgID( this Google.Protobuf.IMessage message ) => _TYPE2ID[message.GetType()];" );
			sb.AppendLine();

			sb.AppendLine( "\tpublic static Protos.MsgID GetMsgID<T>( this Google.Protobuf.IMessage<T> message ) where T : Google.Protobuf.IMessage<T> => _TYPE2ID[message.GetType()];" );
			sb.AppendLine( "\t#endregion" );
			#endregion
			sb.AppendLine( "} //end class" );
			try
			{
				File.WriteAllText( outputPath, sb.ToString(), Encoding.UTF8 );
			}
			catch ( Exception e )
			{
				error = e.ToString();
				return false;
			}
			return true;
		}
	}
}