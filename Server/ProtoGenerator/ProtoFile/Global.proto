syntax = "proto3";
package Protos;

enum MsgID {
	Undefine = 0;

	eG_AskPing = 10;
	eG_AskPingRet = 11;

	//gc
	eGC2LS_AskRegister = 1000;
	eGC2LS_AskLogin = 1001;
	eGC2LS_AskSmartLogin = 1002;
	eGC2LS_AskWXLogin = 1003;
	eGC2LC_UpdateProfile = 1004;

	eGC2GS_AskLogin = 1100;
	eGC2GS_KeepAlive = 1101;

	eGC2BS_AskLogin = 1200;
	eGC2BS_KeepAlive = 1201;
	eGC2BS_RequestSnapshot = 1202;
	eGC2BS_FrameAction = 1203;
	eGC2BS_RequestFrameActions = 1204;
	eGC2BS_CommitSnapshot = 1205;
	eGC2BS_EndBattle = 1206;

	eGC2CS_BeginMatch = 1300;
	eGC2CS_CancelMatch = 1301;
	eGC2CS_QueryRanking = 1302;
	eGC2CS_QueryChampions = 1303;
	eGC2CS_BuyChampion = 1304;
	
	//ls
	eLS2GC_GSInfo = 2000;
	eLS2GC_AskRegRet = 2001;
	eLS2GC_AskLoginRet = 2002;

	eLS2CS_GCLogin = 2100;

	eLS2DB_QueryAccount = 2200;
	eLS2DB_QueryLogin = 2201;
	eLS2DB_Exec = 2202;

	//gs
	eGS2CS_ReportState = 3000;
	eGS2CS_GCAskLogin = 3001;
	eGS2CS_GCLost = 3002;

	eGS2GC_LoginRet = 3100;
	eGS2GC_Kick = 3101;
	eGS2GC_CSLost = 3102;

	//bs
	eBS2CS_ReportState = 4000;
	eBS2CS_BattleInfoRet = 4001;
	eBS2CS_BattleEnd = 4002;
	eBS2CS_KickUser = 4003;

	eBS2GC_LoginRet = 4100;
	eBS2GC_RequestSnapshotRet = 4101;
	eBS2GC_FrameAction = 4102;
	eBS2GC_RequestFrameActionsRet = 4103;
	eBS2GC_OutOfSync = 4104;

	//cs
	eCS2LS_GSInfos = 5000;
	eCS2LS_GSInfo = 5001;
	eCS2LS_GSLost = 5002;
	eCS2LS_GCLoginRet = 5003;

	eCS2GS_GCLoginRet = 5100;
	eCS2GS_KickGC = 5101;

	eCS2BS_BattleInfo = 5200;
	eCS2BS_BattleEndRet = 5201;

	eCS2GC_BeginMatchRet = 5300;
	eCS2GC_MatchState = 5303;
	eCS2GC_AddToMatch = 5304;
	eCS2GC_RemoveFromMatch = 5305;
	eCS2GC_EnterBattle = 5306;
	eCS2GC_BattleEnd = 5307;
	eCS2GC_BSLose = 5308;
	eCS2GC_QueryRankingRet = 5309;
	eCS2GC_QueryChampionsRet = 5310;
	eCS2GC_BuyChampionRet = 5111;

	eCS2DB_UpdateRank = 5400;
	eCS2DB_QueryRanking = 5401;
	eCS2DB_BuyChampion = 5402;

	//db
	eDB2LS_QueryAccountRet = 8000;
	eDB2LS_QueryLoginRet = 8001;
	eDB2LS_ExecRet = 8002;

	eDB2CS_QueryRankingRet = 9000;
	eDB2CS_BuyChampionRet = 9001;
}

message MsgOpts {
	enum Flag {
		Norm = 0;
		RPC = 1;
		RESP = 2;
		TRANS = 3;
	}
	enum TransTarget{
		Undefine = 0;
		GC = 1;
		CS = 2;
		BS = 3;
		LS = 4;
		DB = 5;
		GS = 6;
	}
	//protobuf是变长编码的,数值在0-127就只会用占用一个byte
	uint32 flag = 1;		//消息标记,每个位用途,0:正常消息,1:是否rpc消息,2:是否回应rpc的消息,3:是否转发消息,4-5:转发目标
	uint32 pid = 2;			//运行时消息pid
	uint32 rpid = 3;		//回应对应请求的消息的pid
	uint64 transid = 4;		//转发的网络id
}

message G_AskPing {
	MsgOpts opts = 1;
	int64 time = 2;
}

message G_AskPingRet {
	MsgOpts opts = 1;
	int64 stime = 2;
	int64 time = 3;
}

message Global{
	enum ECommon{
		Success = 0;
		Failed = 1;
	}
	enum Channel {
		Web = 0;
		WXMini = 1;
	}
	enum Platform {
		PC = 0;
		Android = 1;
		IOS = 2;
		WP = 3;
	}
	enum Browser {
		Chrome = 0;
		Firefox = 1;
		Safair = 2;
		Edge = 3;
		IE = 4;
	}
}

message G_UserInfo {
	uint64 gcNID = 1;
	string openID = 2;
	string nickname = 3;
	string avatar = 4;
	int32 gender = 5;
	int32 rank = 6;
	int32 money = 7;
	int32 diamoned = 8;
	uint32 exp = 9;
	repeated int32 champions = 10;
}

/*
<ext>
{
	"RespID": {
		"G_AskPing": "G_AskPingRet",
		"LS2CS_GCLogin":"CS2LS_GCLoginRet",
		"GC2LS_AskRegister": "LS2GC_AskRegRet",
		"GC2LS_AskLogin": "LS2GC_AskLoginRet",
		"GC2LS_AskSmartLogin": "LS2GC_AskLoginRet",
		"GC2LS_AskWXLogin":"LS2GC_AskLoginRet",
		"GC2GS_AskLogin": "GS2GC_LoginRet",
		"GS2CS_GCAskLogin": "CS2GS_GCLoginRet",
		"GC2BS_AskLogin": "BS2GC_LoginRet",
		"LS2DB_QueryAccount":"DB2LS_QueryAccountRet",
		"LS2DB_QueryLogin":"DB2LS_QueryLoginRet",
		"LS2DB_Exec":"DB2LS_ExecRet",
		"GC2CS_BeginMatch":"CS2GC_BeginMatchRet",
		"CS2BS_BattleInfo":"BS2CS_BattleInfoRet",
		"BS2CS_BattleEnd":"CS2BS_BattleEndRet",
		"GC2BS_RequestSnapshot":"BS2GC_RequestSnapshotRet",
		"GC2BS_RequestFrameActions":"BS2GC_RequestFrameActionsRet",
		"CS2DB_QueryRanking":"DB2CS_QueryRankingRet",
		"GC2CS_QueryRanking":"CS2GC_QueryRankingRet",
		"GC2CS_QueryChampions":"CS2GC_QueryChampionsRet",
		"GC2CS_BuyChampion":"CS2GC_BuyChampionRet",
		"CS2DB_BuyChampion":"DB2CS_BuyChampionRet"
	}
}
</ext>
*/