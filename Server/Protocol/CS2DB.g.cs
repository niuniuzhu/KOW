// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: CS2DB.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Protos {

  /// <summary>Holder for reflection information generated from CS2DB.proto</summary>
  public static partial class CS2DBReflection {

    #region Descriptor
    /// <summary>File descriptor for CS2DB.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CS2DBReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgtDUzJEQi5wcm90bxIGUHJvdG9zGgxHbG9iYWwucHJvdG8iVgoKQ1MyREJf",
            "R2FpbhIMCgR1a2V5GAEgASgNEg0KBW1vbmV5GAIgASgFEhAKCGRpYW1vbmVk",
            "GAMgASgFEgwKBHJhbmsYBCABKAUSCwoDZXhwGAUgASgNIlQKEENTMkRCX1Vw",
            "ZGF0ZVJhbmsSHQoEb3B0cxgBIAEoCzIPLlByb3Rvcy5Nc2dPcHRzEiEKBWdh",
            "aW5zGAIgAygLMhIuUHJvdG9zLkNTMkRCX0dhaW5iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Protos.GlobalReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Protos.CS2DB_Gain), global::Protos.CS2DB_Gain.Parser, new[]{ "Ukey", "Money", "Diamoned", "Rank", "Exp" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protos.CS2DB_UpdateRank), global::Protos.CS2DB_UpdateRank.Parser, new[]{ "Opts", "Gains" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CS2DB_Gain : pb::IMessage<CS2DB_Gain> {
    private static readonly pb::MessageParser<CS2DB_Gain> _parser = new pb::MessageParser<CS2DB_Gain>(() => new CS2DB_Gain());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CS2DB_Gain> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protos.CS2DBReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS2DB_Gain() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS2DB_Gain(CS2DB_Gain other) : this() {
      ukey_ = other.ukey_;
      money_ = other.money_;
      diamoned_ = other.diamoned_;
      rank_ = other.rank_;
      exp_ = other.exp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS2DB_Gain Clone() {
      return new CS2DB_Gain(this);
    }

    /// <summary>Field number for the "ukey" field.</summary>
    public const int UkeyFieldNumber = 1;
    private uint ukey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ukey {
      get { return ukey_; }
      set {
        ukey_ = value;
      }
    }

    /// <summary>Field number for the "money" field.</summary>
    public const int MoneyFieldNumber = 2;
    private int money_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Money {
      get { return money_; }
      set {
        money_ = value;
      }
    }

    /// <summary>Field number for the "diamoned" field.</summary>
    public const int DiamonedFieldNumber = 3;
    private int diamoned_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Diamoned {
      get { return diamoned_; }
      set {
        diamoned_ = value;
      }
    }

    /// <summary>Field number for the "rank" field.</summary>
    public const int RankFieldNumber = 4;
    private int rank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Rank {
      get { return rank_; }
      set {
        rank_ = value;
      }
    }

    /// <summary>Field number for the "exp" field.</summary>
    public const int ExpFieldNumber = 5;
    private uint exp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Exp {
      get { return exp_; }
      set {
        exp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CS2DB_Gain);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CS2DB_Gain other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ukey != other.Ukey) return false;
      if (Money != other.Money) return false;
      if (Diamoned != other.Diamoned) return false;
      if (Rank != other.Rank) return false;
      if (Exp != other.Exp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ukey != 0) hash ^= Ukey.GetHashCode();
      if (Money != 0) hash ^= Money.GetHashCode();
      if (Diamoned != 0) hash ^= Diamoned.GetHashCode();
      if (Rank != 0) hash ^= Rank.GetHashCode();
      if (Exp != 0) hash ^= Exp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ukey != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ukey);
      }
      if (Money != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Money);
      }
      if (Diamoned != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Diamoned);
      }
      if (Rank != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Rank);
      }
      if (Exp != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Exp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ukey != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ukey);
      }
      if (Money != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Money);
      }
      if (Diamoned != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Diamoned);
      }
      if (Rank != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rank);
      }
      if (Exp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Exp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CS2DB_Gain other) {
      if (other == null) {
        return;
      }
      if (other.Ukey != 0) {
        Ukey = other.Ukey;
      }
      if (other.Money != 0) {
        Money = other.Money;
      }
      if (other.Diamoned != 0) {
        Diamoned = other.Diamoned;
      }
      if (other.Rank != 0) {
        Rank = other.Rank;
      }
      if (other.Exp != 0) {
        Exp = other.Exp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ukey = input.ReadUInt32();
            break;
          }
          case 16: {
            Money = input.ReadInt32();
            break;
          }
          case 24: {
            Diamoned = input.ReadInt32();
            break;
          }
          case 32: {
            Rank = input.ReadInt32();
            break;
          }
          case 40: {
            Exp = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CS2DB_UpdateRank : pb::IMessage<CS2DB_UpdateRank> {
    private static readonly pb::MessageParser<CS2DB_UpdateRank> _parser = new pb::MessageParser<CS2DB_UpdateRank>(() => new CS2DB_UpdateRank());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CS2DB_UpdateRank> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protos.CS2DBReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS2DB_UpdateRank() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS2DB_UpdateRank(CS2DB_UpdateRank other) : this() {
      opts_ = other.opts_ != null ? other.opts_.Clone() : null;
      gains_ = other.gains_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS2DB_UpdateRank Clone() {
      return new CS2DB_UpdateRank(this);
    }

    /// <summary>Field number for the "opts" field.</summary>
    public const int OptsFieldNumber = 1;
    private global::Protos.MsgOpts opts_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protos.MsgOpts Opts {
      get { return opts_; }
      set {
        opts_ = value;
      }
    }

    /// <summary>Field number for the "gains" field.</summary>
    public const int GainsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Protos.CS2DB_Gain> _repeated_gains_codec
        = pb::FieldCodec.ForMessage(18, global::Protos.CS2DB_Gain.Parser);
    private readonly pbc::RepeatedField<global::Protos.CS2DB_Gain> gains_ = new pbc::RepeatedField<global::Protos.CS2DB_Gain>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protos.CS2DB_Gain> Gains {
      get { return gains_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CS2DB_UpdateRank);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CS2DB_UpdateRank other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Opts, other.Opts)) return false;
      if(!gains_.Equals(other.gains_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (opts_ != null) hash ^= Opts.GetHashCode();
      hash ^= gains_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (opts_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Opts);
      }
      gains_.WriteTo(output, _repeated_gains_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (opts_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Opts);
      }
      size += gains_.CalculateSize(_repeated_gains_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CS2DB_UpdateRank other) {
      if (other == null) {
        return;
      }
      if (other.opts_ != null) {
        if (opts_ == null) {
          opts_ = new global::Protos.MsgOpts();
        }
        Opts.MergeFrom(other.Opts);
      }
      gains_.Add(other.gains_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (opts_ == null) {
              opts_ = new global::Protos.MsgOpts();
            }
            input.ReadMessage(opts_);
            break;
          }
          case 18: {
            gains_.AddEntriesFrom(input, _repeated_gains_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
