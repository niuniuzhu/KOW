// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: CS2GS.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Protos {

  /// <summary>Holder for reflection information generated from CS2GS.proto</summary>
  public static partial class CS2GSReflection {

    #region Descriptor
    /// <summary>File descriptor for CS2GS.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CS2GSReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgtDUzJHUy5wcm90bxIGUHJvdG9zGgxHbG9iYWwucHJvdG8iuAIKEENTMkdT",
            "X0dDTG9naW5SZXQSHQoEb3B0cxgBIAEoCzIPLlByb3Rvcy5Nc2dPcHRzEjAK",
            "BnJlc3VsdBgCIAEoDjIgLlByb3Rvcy5DUzJHU19HQ0xvZ2luUmV0LkVSZXN1",
            "bHQSMwoHZ2NTdGF0ZRgDIAEoDjIiLlByb3Rvcy5DUzJHU19HQ0xvZ2luUmV0",
            "LkVHQ0NTdGF0ZRIkCgh1c2VySW5mbxgEIAEoCzISLlByb3Rvcy5HX1VzZXJJ",
            "bmZvEg0KBWdjTklEGAUgASgEEgwKBGJzSVAYBiABKAkSDgoGYnNQb3J0GAcg",
            "ASgFIigKB0VSZXN1bHQSCwoHU3VjY2VzcxAAEhAKDElsbGVnYWxMb2dpbhAB",
            "IiEKCUVHQ0NTdGF0ZRIICgRJZGxlEAASCgoGQmF0dGxlEAEirwEKDENTMkdT",
            "X0tpY2tHQxIdCgRvcHRzGAEgASgLMg8uUHJvdG9zLk1zZ09wdHMSDQoFZ2NO",
            "SUQYAiABKAQSLAoGcmVhc29uGAMgASgOMhwuUHJvdG9zLkNTMkdTX0tpY2tH",
            "Qy5FUmVhc29uIkMKB0VSZWFzb24SEgoORHVwbGljYXRlTG9naW4QABINCglP",
            "dXRPZlN5bmMQARIKCgZCU0xvc3QQAhIJCgVPdGhlchADYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Protos.GlobalReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Protos.CS2GS_GCLoginRet), global::Protos.CS2GS_GCLoginRet.Parser, new[]{ "Opts", "Result", "GcState", "UserInfo", "GcNID", "BsIP", "BsPort" }, null, new[]{ typeof(global::Protos.CS2GS_GCLoginRet.Types.EResult), typeof(global::Protos.CS2GS_GCLoginRet.Types.EGCCState) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protos.CS2GS_KickGC), global::Protos.CS2GS_KickGC.Parser, new[]{ "Opts", "GcNID", "Reason" }, null, new[]{ typeof(global::Protos.CS2GS_KickGC.Types.EReason) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CS2GS_GCLoginRet : pb::IMessage<CS2GS_GCLoginRet> {
    private static readonly pb::MessageParser<CS2GS_GCLoginRet> _parser = new pb::MessageParser<CS2GS_GCLoginRet>(() => new CS2GS_GCLoginRet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CS2GS_GCLoginRet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protos.CS2GSReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS2GS_GCLoginRet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS2GS_GCLoginRet(CS2GS_GCLoginRet other) : this() {
      opts_ = other.opts_ != null ? other.opts_.Clone() : null;
      result_ = other.result_;
      gcState_ = other.gcState_;
      userInfo_ = other.userInfo_ != null ? other.userInfo_.Clone() : null;
      gcNID_ = other.gcNID_;
      bsIP_ = other.bsIP_;
      bsPort_ = other.bsPort_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS2GS_GCLoginRet Clone() {
      return new CS2GS_GCLoginRet(this);
    }

    /// <summary>Field number for the "opts" field.</summary>
    public const int OptsFieldNumber = 1;
    private global::Protos.MsgOpts opts_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protos.MsgOpts Opts {
      get { return opts_; }
      set {
        opts_ = value;
      }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 2;
    private global::Protos.CS2GS_GCLoginRet.Types.EResult result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protos.CS2GS_GCLoginRet.Types.EResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "gcState" field.</summary>
    public const int GcStateFieldNumber = 3;
    private global::Protos.CS2GS_GCLoginRet.Types.EGCCState gcState_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protos.CS2GS_GCLoginRet.Types.EGCCState GcState {
      get { return gcState_; }
      set {
        gcState_ = value;
      }
    }

    /// <summary>Field number for the "userInfo" field.</summary>
    public const int UserInfoFieldNumber = 4;
    private global::Protos.G_UserInfo userInfo_;
    /// <summary>
    ///main
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protos.G_UserInfo UserInfo {
      get { return userInfo_; }
      set {
        userInfo_ = value;
      }
    }

    /// <summary>Field number for the "gcNID" field.</summary>
    public const int GcNIDFieldNumber = 5;
    private ulong gcNID_;
    /// <summary>
    ///bs
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong GcNID {
      get { return gcNID_; }
      set {
        gcNID_ = value;
      }
    }

    /// <summary>Field number for the "bsIP" field.</summary>
    public const int BsIPFieldNumber = 6;
    private string bsIP_ = "";
    /// <summary>
    ///bs ip
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BsIP {
      get { return bsIP_; }
      set {
        bsIP_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bsPort" field.</summary>
    public const int BsPortFieldNumber = 7;
    private int bsPort_;
    /// <summary>
    ///bs port
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BsPort {
      get { return bsPort_; }
      set {
        bsPort_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CS2GS_GCLoginRet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CS2GS_GCLoginRet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Opts, other.Opts)) return false;
      if (Result != other.Result) return false;
      if (GcState != other.GcState) return false;
      if (!object.Equals(UserInfo, other.UserInfo)) return false;
      if (GcNID != other.GcNID) return false;
      if (BsIP != other.BsIP) return false;
      if (BsPort != other.BsPort) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (opts_ != null) hash ^= Opts.GetHashCode();
      if (Result != 0) hash ^= Result.GetHashCode();
      if (GcState != 0) hash ^= GcState.GetHashCode();
      if (userInfo_ != null) hash ^= UserInfo.GetHashCode();
      if (GcNID != 0UL) hash ^= GcNID.GetHashCode();
      if (BsIP.Length != 0) hash ^= BsIP.GetHashCode();
      if (BsPort != 0) hash ^= BsPort.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (opts_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Opts);
      }
      if (Result != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Result);
      }
      if (GcState != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) GcState);
      }
      if (userInfo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(UserInfo);
      }
      if (GcNID != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(GcNID);
      }
      if (BsIP.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(BsIP);
      }
      if (BsPort != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(BsPort);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (opts_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Opts);
      }
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (GcState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GcState);
      }
      if (userInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserInfo);
      }
      if (GcNID != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GcNID);
      }
      if (BsIP.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BsIP);
      }
      if (BsPort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BsPort);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CS2GS_GCLoginRet other) {
      if (other == null) {
        return;
      }
      if (other.opts_ != null) {
        if (opts_ == null) {
          opts_ = new global::Protos.MsgOpts();
        }
        Opts.MergeFrom(other.Opts);
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.GcState != 0) {
        GcState = other.GcState;
      }
      if (other.userInfo_ != null) {
        if (userInfo_ == null) {
          userInfo_ = new global::Protos.G_UserInfo();
        }
        UserInfo.MergeFrom(other.UserInfo);
      }
      if (other.GcNID != 0UL) {
        GcNID = other.GcNID;
      }
      if (other.BsIP.Length != 0) {
        BsIP = other.BsIP;
      }
      if (other.BsPort != 0) {
        BsPort = other.BsPort;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (opts_ == null) {
              opts_ = new global::Protos.MsgOpts();
            }
            input.ReadMessage(opts_);
            break;
          }
          case 16: {
            result_ = (global::Protos.CS2GS_GCLoginRet.Types.EResult) input.ReadEnum();
            break;
          }
          case 24: {
            gcState_ = (global::Protos.CS2GS_GCLoginRet.Types.EGCCState) input.ReadEnum();
            break;
          }
          case 34: {
            if (userInfo_ == null) {
              userInfo_ = new global::Protos.G_UserInfo();
            }
            input.ReadMessage(userInfo_);
            break;
          }
          case 40: {
            GcNID = input.ReadUInt64();
            break;
          }
          case 50: {
            BsIP = input.ReadString();
            break;
          }
          case 56: {
            BsPort = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CS2GS_GCLoginRet message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EResult {
        [pbr::OriginalName("Success")] Success = 0,
        /// <summary>
        ///非法登陆
        /// </summary>
        [pbr::OriginalName("IllegalLogin")] IllegalLogin = 1,
      }

      /// <summary>
      ///GC当前状态
      /// </summary>
      public enum EGCCState {
        [pbr::OriginalName("Idle")] Idle = 0,
        [pbr::OriginalName("Battle")] Battle = 1,
      }

    }
    #endregion

  }

  public sealed partial class CS2GS_KickGC : pb::IMessage<CS2GS_KickGC> {
    private static readonly pb::MessageParser<CS2GS_KickGC> _parser = new pb::MessageParser<CS2GS_KickGC>(() => new CS2GS_KickGC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CS2GS_KickGC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protos.CS2GSReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS2GS_KickGC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS2GS_KickGC(CS2GS_KickGC other) : this() {
      opts_ = other.opts_ != null ? other.opts_.Clone() : null;
      gcNID_ = other.gcNID_;
      reason_ = other.reason_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CS2GS_KickGC Clone() {
      return new CS2GS_KickGC(this);
    }

    /// <summary>Field number for the "opts" field.</summary>
    public const int OptsFieldNumber = 1;
    private global::Protos.MsgOpts opts_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protos.MsgOpts Opts {
      get { return opts_; }
      set {
        opts_ = value;
      }
    }

    /// <summary>Field number for the "gcNID" field.</summary>
    public const int GcNIDFieldNumber = 2;
    private ulong gcNID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong GcNID {
      get { return gcNID_; }
      set {
        gcNID_ = value;
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 3;
    private global::Protos.CS2GS_KickGC.Types.EReason reason_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protos.CS2GS_KickGC.Types.EReason Reason {
      get { return reason_; }
      set {
        reason_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CS2GS_KickGC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CS2GS_KickGC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Opts, other.Opts)) return false;
      if (GcNID != other.GcNID) return false;
      if (Reason != other.Reason) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (opts_ != null) hash ^= Opts.GetHashCode();
      if (GcNID != 0UL) hash ^= GcNID.GetHashCode();
      if (Reason != 0) hash ^= Reason.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (opts_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Opts);
      }
      if (GcNID != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(GcNID);
      }
      if (Reason != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Reason);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (opts_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Opts);
      }
      if (GcNID != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GcNID);
      }
      if (Reason != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Reason);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CS2GS_KickGC other) {
      if (other == null) {
        return;
      }
      if (other.opts_ != null) {
        if (opts_ == null) {
          opts_ = new global::Protos.MsgOpts();
        }
        Opts.MergeFrom(other.Opts);
      }
      if (other.GcNID != 0UL) {
        GcNID = other.GcNID;
      }
      if (other.Reason != 0) {
        Reason = other.Reason;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (opts_ == null) {
              opts_ = new global::Protos.MsgOpts();
            }
            input.ReadMessage(opts_);
            break;
          }
          case 16: {
            GcNID = input.ReadUInt64();
            break;
          }
          case 24: {
            reason_ = (global::Protos.CS2GS_KickGC.Types.EReason) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CS2GS_KickGC message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EReason {
        [pbr::OriginalName("DuplicateLogin")] DuplicateLogin = 0,
        [pbr::OriginalName("OutOfSync")] OutOfSync = 1,
        [pbr::OriginalName("BSLost")] Bslost = 2,
        /// <summary>
        /// ...more reason
        /// </summary>
        [pbr::OriginalName("Other")] Other = 3,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
