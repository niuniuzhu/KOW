// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: LS2CS.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Protos {

  /// <summary>Holder for reflection information generated from LS2CS.proto</summary>
  public static partial class LS2CSReflection {

    #region Descriptor
    /// <summary>File descriptor for LS2CS.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LS2CSReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgtMUzJDUy5wcm90bxIGUHJvdG9zGgxHbG9iYWwucHJvdG8igQIKDUxTMkNT",
            "X0dDTG9naW4SHQoEb3B0cxgBIAEoCzIPLlByb3Rvcy5Nc2dPcHRzEicKB2No",
            "YW5uZWwYAiABKA4yFi5Qcm90b3MuR2xvYmFsLkNoYW5uZWwSJwoHYnJvd3Nl",
            "chgDIAEoDjIWLlByb3Rvcy5HbG9iYWwuQnJvd3NlchIpCghwbGF0Zm9ybRgE",
            "IAEoDjIXLlByb3Rvcy5HbG9iYWwuUGxhdGZvcm0SEQoJc2Vzc2lvbklEGAUg",
            "ASgEEgwKBHVrZXkYBiABKA0SDgoGb3BlbklEGAcgASgJEhIKCnNlc3Npb25L",
            "ZXkYCCABKAkSDwoHdW5pb25JRBgJIAEoCWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Protos.GlobalReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Protos.LS2CS_GCLogin), global::Protos.LS2CS_GCLogin.Parser, new[]{ "Opts", "Channel", "Browser", "Platform", "SessionID", "Ukey", "OpenID", "SessionKey", "UnionID" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///通知cs有客户端登陆
  /// </summary>
  public sealed partial class LS2CS_GCLogin : pb::IMessage<LS2CS_GCLogin> {
    private static readonly pb::MessageParser<LS2CS_GCLogin> _parser = new pb::MessageParser<LS2CS_GCLogin>(() => new LS2CS_GCLogin());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LS2CS_GCLogin> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protos.LS2CSReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LS2CS_GCLogin() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LS2CS_GCLogin(LS2CS_GCLogin other) : this() {
      opts_ = other.opts_ != null ? other.opts_.Clone() : null;
      channel_ = other.channel_;
      browser_ = other.browser_;
      platform_ = other.platform_;
      sessionID_ = other.sessionID_;
      ukey_ = other.ukey_;
      openID_ = other.openID_;
      sessionKey_ = other.sessionKey_;
      unionID_ = other.unionID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LS2CS_GCLogin Clone() {
      return new LS2CS_GCLogin(this);
    }

    /// <summary>Field number for the "opts" field.</summary>
    public const int OptsFieldNumber = 1;
    private global::Protos.MsgOpts opts_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protos.MsgOpts Opts {
      get { return opts_; }
      set {
        opts_ = value;
      }
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 2;
    private global::Protos.Global.Types.Channel channel_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protos.Global.Types.Channel Channel {
      get { return channel_; }
      set {
        channel_ = value;
      }
    }

    /// <summary>Field number for the "browser" field.</summary>
    public const int BrowserFieldNumber = 3;
    private global::Protos.Global.Types.Browser browser_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protos.Global.Types.Browser Browser {
      get { return browser_; }
      set {
        browser_ = value;
      }
    }

    /// <summary>Field number for the "platform" field.</summary>
    public const int PlatformFieldNumber = 4;
    private global::Protos.Global.Types.Platform platform_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protos.Global.Types.Platform Platform {
      get { return platform_; }
      set {
        platform_ = value;
      }
    }

    /// <summary>Field number for the "sessionID" field.</summary>
    public const int SessionIDFieldNumber = 5;
    private ulong sessionID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong SessionID {
      get { return sessionID_; }
      set {
        sessionID_ = value;
      }
    }

    /// <summary>Field number for the "ukey" field.</summary>
    public const int UkeyFieldNumber = 6;
    private uint ukey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ukey {
      get { return ukey_; }
      set {
        ukey_ = value;
      }
    }

    /// <summary>Field number for the "openID" field.</summary>
    public const int OpenIDFieldNumber = 7;
    private string openID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OpenID {
      get { return openID_; }
      set {
        openID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sessionKey" field.</summary>
    public const int SessionKeyFieldNumber = 8;
    private string sessionKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionKey {
      get { return sessionKey_; }
      set {
        sessionKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unionID" field.</summary>
    public const int UnionIDFieldNumber = 9;
    private string unionID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnionID {
      get { return unionID_; }
      set {
        unionID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LS2CS_GCLogin);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LS2CS_GCLogin other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Opts, other.Opts)) return false;
      if (Channel != other.Channel) return false;
      if (Browser != other.Browser) return false;
      if (Platform != other.Platform) return false;
      if (SessionID != other.SessionID) return false;
      if (Ukey != other.Ukey) return false;
      if (OpenID != other.OpenID) return false;
      if (SessionKey != other.SessionKey) return false;
      if (UnionID != other.UnionID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (opts_ != null) hash ^= Opts.GetHashCode();
      if (Channel != 0) hash ^= Channel.GetHashCode();
      if (Browser != 0) hash ^= Browser.GetHashCode();
      if (Platform != 0) hash ^= Platform.GetHashCode();
      if (SessionID != 0UL) hash ^= SessionID.GetHashCode();
      if (Ukey != 0) hash ^= Ukey.GetHashCode();
      if (OpenID.Length != 0) hash ^= OpenID.GetHashCode();
      if (SessionKey.Length != 0) hash ^= SessionKey.GetHashCode();
      if (UnionID.Length != 0) hash ^= UnionID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (opts_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Opts);
      }
      if (Channel != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Channel);
      }
      if (Browser != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Browser);
      }
      if (Platform != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Platform);
      }
      if (SessionID != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(SessionID);
      }
      if (Ukey != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Ukey);
      }
      if (OpenID.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(OpenID);
      }
      if (SessionKey.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(SessionKey);
      }
      if (UnionID.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(UnionID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (opts_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Opts);
      }
      if (Channel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Channel);
      }
      if (Browser != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Browser);
      }
      if (Platform != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Platform);
      }
      if (SessionID != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SessionID);
      }
      if (Ukey != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ukey);
      }
      if (OpenID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OpenID);
      }
      if (SessionKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionKey);
      }
      if (UnionID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnionID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LS2CS_GCLogin other) {
      if (other == null) {
        return;
      }
      if (other.opts_ != null) {
        if (opts_ == null) {
          opts_ = new global::Protos.MsgOpts();
        }
        Opts.MergeFrom(other.Opts);
      }
      if (other.Channel != 0) {
        Channel = other.Channel;
      }
      if (other.Browser != 0) {
        Browser = other.Browser;
      }
      if (other.Platform != 0) {
        Platform = other.Platform;
      }
      if (other.SessionID != 0UL) {
        SessionID = other.SessionID;
      }
      if (other.Ukey != 0) {
        Ukey = other.Ukey;
      }
      if (other.OpenID.Length != 0) {
        OpenID = other.OpenID;
      }
      if (other.SessionKey.Length != 0) {
        SessionKey = other.SessionKey;
      }
      if (other.UnionID.Length != 0) {
        UnionID = other.UnionID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (opts_ == null) {
              opts_ = new global::Protos.MsgOpts();
            }
            input.ReadMessage(opts_);
            break;
          }
          case 16: {
            channel_ = (global::Protos.Global.Types.Channel) input.ReadEnum();
            break;
          }
          case 24: {
            browser_ = (global::Protos.Global.Types.Browser) input.ReadEnum();
            break;
          }
          case 32: {
            platform_ = (global::Protos.Global.Types.Platform) input.ReadEnum();
            break;
          }
          case 40: {
            SessionID = input.ReadUInt64();
            break;
          }
          case 48: {
            Ukey = input.ReadUInt32();
            break;
          }
          case 58: {
            OpenID = input.ReadString();
            break;
          }
          case 66: {
            SessionKey = input.ReadString();
            break;
          }
          case 74: {
            UnionID = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
