匹配流程:
1,GC请求CS匹配
2,CS匹配成功,等待GC加载游戏数据
3,所有GC加载完成或CS等待超时,通知BS创建战场,并等待GC连接
3,BS通知CS创建成功,CS改变玩家状态为战场并持久化,必须主动通知(避免断线重连后无法进入战场)GC进入战场,下发BS连接信息
4,GC连接BS,BS验证,等待所有GC连接或超时,开始战斗
5,GC请求战场状态,追帧

断线重连:
1,GC登陆CS
2,CS检查玩家场景状态,若为休闲状态,无需处理,若为战场状态,通知GC进入战场,下发BS连接信息
3,GC加载游戏数据,完毕后请求战场状态,追帧

补充:BS确认战场创建成功,并返回结果给CS.CS改变玩家状态并持久化.
玩家应一直保持在线上,即使客户端关闭连接,CS里的玩家不应该下线.等待客户端重连或战场结束.
客户端重连应获取当前状态,如果CS没该客户端,应从DB中获取状态.
战场结束后,若玩家不在线,则下线.

快照实现(断线重连)
战场创建后应保存一份初始快照
客户端每隔一段帧数,提交一份快照,服务端对比各个客户端快照,相同则信任,不同则处理异常客户端或关闭战场.信任的快照将被保存.
客户端连接后获取最新快照,并获取当前帧数.客户端需支持恢复到快照,加速到快照.当回到快照状态时,根据当前服务端帧数进行全速追帧.追帧完毕才正式进入战场操作.
问题:服务端如何保存客户端快照,由于客户端提交快照的时机不一致.

追帧的时候不会同步到view,所以一些syncevent不需要发.